# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

        # Set up Python 3.9 environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # Run our unit tests using the test application
      - name: Run unit tests
        run: |
          python test_application.py
          
  deploy:
    # Only run this job if "build" has ended successfully
    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Set up Python 3.9 environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      # Elastic Beanstalk CLI version
      - name: Get EB CLI version
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version

          # Configure AWS Credentials

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Create the Elastic Beanstalk application
      - name: Create EBS application
        run: |
          eb init -p python-3.8 Flask_Basic --region eu-central-1

      # Deploy to (or Create) the Elastic Beanstalk environment
      - name: Create test environment & deploy
        run: |
          (eb use test-environment && eb status test-environment && eb deploy --message "New commit" --label `git rev-parse HEAD`) || eb create test-environment
          curl 'https://app.devrev.ai/api/gateway/works/don:DEV-GjCEV2rv:ticket:1/comments' \
            -H 'authority: app.devrev.ai' \
            -H 'accept: application/json, text/plain, */*' \
            -H 'accept-language: en-GB,en-US;q=0.9,en;q=0.8' \
            -H 'authorization: ${{ secrets.DEVREV_TOKEN }}' \
            -H 'content-type: application/json' \
            -H 'origin: https://app.devrev.ai' \
            -H 'referer: https://app.devrev.ai/ipdf/works?page=1&per_page=50&quickAccessId=all_tickets&quickAccessMainCategory=work&status=open%2Cin_progress&swi=TKT-1&work_type=ticket' \
            -H 'sec-fetch-dest: empty' \
            -H 'sec-fetch-mode: cors' \
            -H 'sec-fetch-site: same-origin' \
            -H 'sec-gpc: 1' \
            --data-raw '{"attachmentIds":null,"body":"Created New Deployment '$(git rev-parse HEAD)'"}' \
            --compressed
